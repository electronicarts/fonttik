name: C/C++ CI Windows

on:
  push:
    branches: "**"
  pull_request:
    branches: [ "main", "dev" ]
  workflow_dispatch:
jobs:
  build-release:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: gather dependencies
      run: |
        choco install ninja
        echo "Deleting old vcpkg install"
        rm /s /q C:\vcpkg
        echo "Cloning Vcpkg"
        git clone https://github.com/Microsoft/vcpkg.git
        ./vcpkg/bootstrap-vcpkg.sh
        echo "Cloning done"

        chcp 65001 #set code page to utf-8
        echo ("VCPKG_ROOT=" + "./vcpkg") >> $env:GITHUB_ENV

    - name: Restore vcpkg and its artifacts.
      uses: actions/cache@v3
      with:
          path: |
            ${{ env.VCPKG_ROOT }}
            !${{ env.VCPKG_ROOT }}/buildtrees
            !${{ env.VCPKG_ROOT }}/packages
            !${{ env.VCPKG_ROOT }}/downloads
            !${{ env.VCPKG_ROOT }}/installed
          key: |
            ${{ hashFiles( 'vcpkg.json' ) }}

    - name: cmake configure
      run:  cmake -DBUILD_APPS=ON -DBUILD_TESTS=ON --preset linux-release
      env:
        VCPKG_ROOT: ${{ env.VCPKG_ROOT }}
    - name: build
      run: cmake --build --preset linux-release
      env:
        VCPKG_ROOT: ${{ env.VCPKG_ROOT }}
    - name: test
      run: |
            ls
            echo "Start testing"
            ctest --preset Fonttiklib-linux
  build-debug:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: gather dependencies
      run: |
        choco install ninja
        echo "Deleting old vcpkg install"
        rm /s /q C:\vcpkg
        echo "Cloning Vcpkg"
        git clone https://github.com/Microsoft/vcpkg.git
        ./vcpkg/bootstrap-vcpkg.sh
        echo "Cloning done"

        chcp 65001 #set code page to utf-8
        echo ("VCPKG_ROOT=" + "./vcpkg") >> $env:GITHUB_ENV

    - name: Restore vcpkg and its artifacts.
      uses: actions/cache@v3
      with:
          path: |
            ${{ env.VCPKG_ROOT }}
            !${{ env.VCPKG_ROOT }}/buildtrees
            !${{ env.VCPKG_ROOT }}/packages
            !${{ env.VCPKG_ROOT }}/downloads
            !${{ env.VCPKG_ROOT }}/installed
          key: |
            ${{ hashFiles( 'vcpkg.json' ) }}

    - name: cmake configure
      run:  cmake -DBUILD_APPS=ON -DBUILD_TESTS=ON --preset linux-debug
      env:
        VCPKG_ROOT: ${{ env.VCPKG_ROOT }}
    - name: build
      run: cmake --build --preset linux-debug
      env:
        VCPKG_ROOT: ${{ env.VCPKG_ROOT }}
    - name: test
      run: |
            ls
            echo "Start testing"
            ctest --preset Fonttiklib-linux